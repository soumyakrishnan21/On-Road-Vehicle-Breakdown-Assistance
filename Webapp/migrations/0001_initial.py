# Generated by Django 5.0.6 on 2024-08-11 15:45

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "Productname",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("Quantity", models.IntegerField(blank=True, null=True)),
                ("Totalprice", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_question", models.TextField()),
                ("bot_response", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        # migrations.CreateModel(
        #     name="ChatMessages",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         ("room_name", models.CharField(max_length=100)),
        #         ("sender_type", models.CharField(max_length=50)),
        #         ("sender_id", models.IntegerField()),
        #         ("receiver_type", models.CharField(max_length=50)),
        #         ("receiver_id", models.IntegerField()),
        #         ("message", models.TextField()),
        #         ("timestamp", models.DateTimeField(auto_now_add=True)),
        #         ("is_read", models.BooleanField(default=False)),
        #     ],
        # ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=255)),
                ("answer", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("message", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="logintable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Username", models.CharField(blank=True, max_length=100, null=True)),
                ("Password", models.CharField(blank=True, max_length=100, null=True)),
                ("Type", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Mechanics",
            fields=[
                ("Mechid", models.AutoField(primary_key=True, serialize=False)),
                ("Name", models.CharField(blank=True, max_length=100, null=True)),
                ("Age", models.IntegerField(blank=True, null=True)),
                ("Address", models.CharField(blank=True, max_length=100, null=True)),
                ("Mobile", models.IntegerField(blank=True, null=True)),
                ("Vehicle", models.CharField(blank=True, max_length=100, null=True)),
                ("Place", models.CharField(blank=True, max_length=100, null=True)),
                ("Latitude", models.FloatField(blank=True, null=True)),
                ("Longitude", models.FloatField(blank=True, null=True)),
                ("Email", models.EmailField(blank=True, max_length=100, null=True)),
                ("Username", models.CharField(blank=True, max_length=100, null=True)),
                ("Password", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "Picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="Mechanic Images"
                    ),
                ),
                ("Type", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Mechpayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Userid", models.IntegerField(blank=True, null=True)),
                ("Mechid", models.IntegerField(blank=True, null=True)),
                ("Reqid", models.IntegerField(blank=True, null=True)),
                ("Amount", models.IntegerField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        # migrations.CreateModel(
        #     name="Messages",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         ("value", models.CharField(max_length=1000000)),
        #         (
        #             "date",
        #             models.DateTimeField(
        #                 blank=True,
        #                 default=datetime.datetime(2024, 8, 11, 21, 15, 54, 132119),
        #             ),
        #         ),
        #         ("user", models.CharField(max_length=1000000)),
        #         ("room", models.CharField(max_length=1000000)),
        #     ],
        # ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uname", models.CharField(blank=True, max_length=100, null=True)),
                ("Email", models.EmailField(blank=True, max_length=100, null=True)),
                ("Phone", models.IntegerField(blank=True, null=True)),
                ("Address", models.CharField(blank=True, max_length=500, null=True)),
                ("Message", models.CharField(blank=True, max_length=500, null=True)),
                ("Totalprice", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PINLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("pin_code", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=100, null=True)),
                ("service", models.CharField(blank=True, max_length=100, null=True)),
                ("price", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ServiceCenter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("BName", models.CharField(blank=True, max_length=100, null=True)),
                ("CPerson", models.CharField(blank=True, max_length=100, null=True)),
                ("Age", models.IntegerField(blank=True, null=True)),
                ("Address", models.CharField(blank=True, max_length=100, null=True)),
                ("City", models.CharField(blank=True, max_length=100, null=True)),
                ("State", models.CharField(blank=True, max_length=100, null=True)),
                ("PIN", models.IntegerField(blank=True, null=True)),
                ("Mobile", models.IntegerField(blank=True, null=True)),
                (
                    "Description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("Hours", models.CharField(blank=True, max_length=100, null=True)),
                ("Latitude", models.FloatField(blank=True, null=True)),
                ("Longitude", models.FloatField(blank=True, null=True)),
                ("Email", models.EmailField(blank=True, max_length=100, null=True)),
                ("Username", models.CharField(blank=True, max_length=100, null=True)),
                ("Password", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "Picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="Service Center Images"
                    ),
                ),
                ("Type", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="servicefeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("userid", models.IntegerField(blank=True, null=True)),
                ("serid", models.IntegerField(blank=True, null=True)),
                ("feedback", models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="userdatas",
            fields=[
                ("Userid", models.AutoField(primary_key=True, serialize=False)),
                ("Name", models.CharField(blank=True, max_length=100, null=True)),
                ("Email", models.EmailField(blank=True, max_length=100, null=True)),
                ("Mobile", models.IntegerField(blank=True, null=True)),
                ("Latitude", models.FloatField(blank=True, null=True)),
                ("Longitude", models.FloatField(blank=True, null=True)),
                ("Location", models.CharField(blank=True, max_length=100, null=True)),
                ("Password", models.CharField(blank=True, max_length=100, null=True)),
                ("Cpassword", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_booked",
                    models.DateTimeField(
                        default=datetime.datetime(2024, 8, 11, 21, 15, 54, 129999)
                    ),
                ),
                ("booking_date", models.DateField()),
                ("booking_time", models.TimeField()),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "service_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Webapp.servicecenter",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Webapp.userdatas",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRequests",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True, null=True)),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                (
                    "Mechid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Webapp.mechanics",
                    ),
                ),
                (
                    "Userid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Webapp.userdatas",
                    ),
                ),
            ],
        ),
    ]
